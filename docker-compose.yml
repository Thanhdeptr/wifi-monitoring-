version: '3.8'
services:
  snmp-exporter:
    image: prom/snmp-exporter:v0.24.1
    container_name: snmp-exporter
    network_mode: host
    volumes:
      - ./configs/snmp.yml:/etc/snmp_exporter/snmp.yml:ro
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    network_mode: host
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./configs/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
      - ./data/prom:/prom:Z
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prom
      - --storage.tsdb.retention.time=15d
      - --web.enable-lifecycle
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    network_mode: host
    volumes:
      - ./configs/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./secrets/slack_webhook:/run/secrets/slack_webhook:ro
      - alertmanager_data:/alertmanager
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
      - --web.external-url=http://192.168.10.18:9093
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    network_mode: host
    environment:
      - GF_SERVER_HTTP_PORT=3001
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/grafana/provisioning:/etc/grafana/provisioning:ro
    restart: unless-stopped
    depends_on:
      - loki

  mysqld-exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysqld-exporter
    network_mode: host
    volumes:
      - ./configs/mysql_exporter.my.cnf:/etc/mysql_exporter.my.cnf:ro
    command:
      - --config.my-cnf=/etc/mysql_exporter.my.cnf
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    container_name: loki
    network_mode: host
    volumes:
      - loki_data:/loki
      - ./configs/loki.yml:/etc/loki/loki.yml
    command:
      - --config.file=/etc/loki/loki.yml
    restart: unless-stopped

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    network_mode: host
    volumes:
      - ./configs/promtail/promtail.yml:/etc/promtail/promtail.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --config.file=/etc/promtail/promtail.yml
    restart: unless-stopped
    depends_on:
      - loki

volumes:
  loki_data:
  prom_data:
  grafana_data:
  alertmanager_data:
